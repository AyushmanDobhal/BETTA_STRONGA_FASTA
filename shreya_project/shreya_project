#!/usr/bin/env python3
table = {
        'ATA':'I', 'ATC':'I', 'ATT':'I', 'ATG':'M',
        'ACA':'T', 'ACC':'T', 'ACG':'T', 'ACT':'T',
        'AAC':'N', 'AAT':'N', 'AAA':'K', 'AAG':'K',
        'AGC':'S', 'AGT':'S', 'AGA':'R', 'AGG':'R',                 
        'CTA':'L', 'CTC':'L', 'CTG':'L', 'CTT':'L',
        'CCA':'P', 'CCC':'P', 'CCG':'P', 'CCT':'P',
        'CAC':'H', 'CAT':'H', 'CAA':'Q', 'CAG':'Q',
        'CGA':'R', 'CGC':'R', 'CGG':'R', 'CGT':'R',
        'GTA':'V', 'GTC':'V', 'GTG':'V', 'GTT':'V',
        'GCA':'A', 'GCC':'A', 'GCG':'A', 'GCT':'A',
        'GAC':'D', 'GAT':'D', 'GAA':'E', 'GAG':'E',
        'GGA':'G', 'GGC':'G', 'GGG':'G', 'GGT':'G',
        'TCA':'S', 'TCC':'S', 'TCG':'S', 'TCT':'S',
        'TTC':'F', 'TTT':'F', 'TTA':'L', 'TTG':'L',
        'TAC':'Y', 'TAT':'Y', 'TAA':'_', 'TAG':'_',
        'TGC':'C', 'TGT':'C', 'TGA':'_', 'TGG':'W',
    }
def translation(seq):
  protein=""
  for i in range(0,len(seq),3):
    if len(seq[i:i+3]) == 3:
      codon=seq[i:i+3]
      protein+=table[codon]
  return protein
seq='ATGCGTGACGTTTGACGGTAGGCGTGAGGCGATTTAGCGGTAGGACGATGCGATGATGATG'
aa_seq= translation(seq)
print(f"aa_seq:\n{aa_seq}")

def readingframe_1(seq):
	readingframe_1=seq[0:]
	return readingframe_1

def readingframe_2(seq):
	readingframe_2=seq[1:]
	return readingframe_2

def readingframe_3(seq):
	readingframe_3=seq[2:]
	return readingframe_3  

def dictionary(seq):
	dna_dict={}
	for line in seq:
		if line.startswith ('>'):
			gene_ID=line
		else:
			sequence=line
			dna_dict[gene_ID]=sequence
	return dna_dict
seq='>seq:\nATGCGTGACGTTTGACGGTAGGCGTGAGGCGATTTAGCGGTAGGACGATGCGATGATGATG'
readingframe2=readingframe_2(seq)
#print(readingframe2)
print(seq)
dnadict=dictionary(seq)
print(dnadict)
  
